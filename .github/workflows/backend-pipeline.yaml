name: Deploy Backend

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-backend:
    runs-on: ubuntu-24.04
    environment: dev
    
    steps:
      # 1. Clone Repo
      - name: Clone repo
        uses: actions/checkout@v4

      # 2. Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE }}
          role-session-name: "${{ github.actor }}-${{ github.run_id }}"

      # 3. Set up Node.js (Fix cache path)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: backend/package-lock.json  # Fix the lock file path

      # 4. Install Dependencies (Build Stage)
      - name: Install Dependencies
        run: |
          cd backend
          npm ci

      # 5. Run Build
      - name: Run Build
        run: |
          cd backend
          npm run bundle

      # 6. Prepare Lambda Package (Fix LAMBDA_TASK_ROOT issue)
      - name: Package Lambda for Deployment
        run: |
          export LAMBDA_TASK_ROOT="./lambda_package"  # Use a writable directory instead
          mkdir -p $LAMBDA_TASK_ROOT
          
          # Move dist files to the root of lambda package
          cp -r backend/dist/* $LAMBDA_TASK_ROOT/  # Move only contents of dist
          
          # Copy package files for dependency installation
          cp backend/package.json backend/package-lock.json $LAMBDA_TASK_ROOT/
          
          cd $LAMBDA_TASK_ROOT
          npm ci --production  # Install only production dependencies
          
          cd ..
          zip -r lambda.zip lambda_package/*
      # 7. Upload to S3
      - name: Upload to S3
        run: |
          aws s3 cp lambda.zip s3://test-dev-nscc77-redhat-bucket-test2/lambda.zip
