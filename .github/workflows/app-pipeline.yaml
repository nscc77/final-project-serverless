name: Implement CI/CD pipeline with a NodeJS app

on:
  push:
    branches:
      - 'main'
    paths:
      - 'backend/**'
      - 'frontend/**'
  workflow_dispatch:
    inputs:
      deploy_backend:
        description: "Deploy Backend"
        required: false
        default: "false"
      deploy_frontend:
        description: "Deploy Frontend"
        required: false
        default: "false"

permissions:
  id-token: write
  contents: read

jobs:
  deploy-backend:
    if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[backend]') || github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_backend == 'true' }}
    environment: dev
    runs-on: ubuntu-24.04

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE }}
          role-session-name: "${{ github.actor }}-${{ github.run_id }}"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend-app
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./backend
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG   

  deploy-frontend:
    if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[frontend]') || github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_frontend == 'true' }}
    environment: dev
    runs-on: ubuntu-24.04

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE }}
          role-session-name: "${{ github.actor }}-${{ github.run_id }}"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build App
        working-directory: ./frontend
        env:
          VITE_BACKEND_API_URL: ${{ secrets.VITE_BACKEND_API_URL }}
          VITE_USER_POOL_ID: ${{ secrets.VITE_USER_POOL_ID }}
          VITE_USER_POOL_CLIENT_ID: ${{ secrets.VITE_USER_POOL_CLIENT_ID }}
          VITE_AWS_REGION: ${{ vars.AWS_REGION }}
        run: npm run build

      - name: Deploy to S3
        working-directory: ./frontend
        run: |
          aws s3 sync dist/ s3://spectrex.click --delete
