name: Implement CI/CD pipeline with a NodeJS app

# trigger
on:
  push:
    branches:
    - 'main'

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  app-deploy:
    environment: dev
    # specify Runner details: Self-hosted or GitHub Runner
    runs-on: "ubuntu-24.04"

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.IAM_ROLE }}
          role-session-name: "${{ github.actor }}-${{ github.run_id }}"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Backend - Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend-app
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./backend
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG   

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Use the version specified in your project

      # 3. Install dependencies
      - name: Install Dependencies
        working-directory: ./frontend      
        run: npm ci
      # 4. Build the React app
      - name: Build App
        working-directory: ./frontend 
        env:
          VITE_BACKEND_API_URL: ${{ secrets.VITE_BACKEND_API_URL }}
          VITE_USER_POOL_ID: ${{ secrets.VITE_USER_POOL_ID }}
          VITE_USER_POOL_CLIENT_ID: ${{ secrets.VITE_USER_POOL_CLIENT_ID }}
          VITE_AWS_REGION: ${{ vars.AWS_REGION }}
        run: npm run build

      # 5. Deploy to S3
      - name: Deploy to S3
        working-directory: ./frontend 
        run: |
          aws s3 sync dist/ s3://spectrex.click --delete